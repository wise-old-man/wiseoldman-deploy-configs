services:
  ################## Databases ##################
  redis:
    container_name: redis
    image: redis/redis-stack-server:7.0.6-RC8
    networks:
      - generic-network
    env_file:
      - ./.env
    volumes:
      - redis-data:/data
  db:
    container_name: db
    image: postgres:14.2
    shm_size: 4g
    volumes:
      - /mnt/volume_lon1_02/pgdata:/var/lib/postgresql/data
    networks:
      - generic-network
    env_file:
      - ./.env
    expose:
      - "5432"
    ports:
      - "5432:5432"
  ################## Core ##################
  caddy:
    container_name: caddy
    image: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - ./.env
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    volumes:
      - caddy-config:/config
      - caddy-data:/data
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - generic-network
  app:
    container_name: app
    image: wiseoldman/app:latest
    networks:
      - generic-network
    env_file:
      - ./.env
    depends_on:
      - redis
  api:
    container_name: api
    image: wiseoldman/api:latest
    env_file:
      - ./.env
    networks:
      - generic-network
      - metrics-network
    depends_on:
      - redis
  bull-board:
    container_name: bull-board
    image: wiseoldman/api:latest
    command: ["npm", "run", "prod:bull-board"]
    env_file:
      - ./.env
    networks:
      - generic-network
    depends_on:
      - redis
  bot:
    container_name: bot
    image: wiseoldman/discord-bot:latest
    env_file:
      - ./.env
    networks:
      - generic-network
      - metrics-network
  hom-bot:
    container_name: hom-bot
    image: wiseoldman/hom:latest
    env_file:
      - ./.env
  ################## Metrics ##################
  grafana:
    container_name: grafana
    image: grafana/grafana:7.5.17
    volumes:
      - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - grafana-data:/var/lib/grafana
    networks:
      - metrics-network
      - generic-network
    env_file:
      - ./.env
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.21.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - metrics-network
      - generic-network
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
  metrics:
    container_name: metrics
    image: wiseoldman/metrics:latest
    env_file:
      - ./.env
    networks:
      - metrics-network
  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - metrics-network
    devices:
      - "/dev/kmsg"
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    networks:
      - metrics-network
  ################## Utils ##################
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./.env
    ports:
      - "54321:80"
networks:
  generic-network:
  metrics-network:
volumes:
  redis-data:
  prometheus-data:
  caddy-config:
  caddy-data:
  grafana-data:
    external: true
